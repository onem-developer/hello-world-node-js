{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to ONEm For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-onem","text":"For full documentation visit mkdocs.org .","title":"Welcome to ONEm"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"add-ons/","text":"v1.6.1 07/12/2018 Fixed parsing tags other than links #24 (Fix loading of a href element) v1.6.0 02/22/2018 Check for page redirects #22 (Check for redirecting pages if links.redirects is enabled, thanks to @karfau ) Set rel=\"noopener noreferrer\" to all external links #21 Updated French translation strings #19 Improved README.md and YAML files v1.5.3 02/18/2017 Fixed Russian translation strings #17 (Thanks to @geschke for the fast PR) v1.5.2 02/17/2017 Added Russian translations #16 (Thanks to @ktaranov ) v1.5.1 02/10/2017 Fixed error in getting the remote image size v1.5.0 02/09/2017 Use tabs in admin panel settings for better user experience Use toggle buttons for page settings v1.4.4 01/11/2017 Fixed CURLOPT_AUTOREFERER constant v1.4.3 10/31/2016 Fixed #11 (Not working with cache enabling) (see PR #15 ) Fixed #13 (Preferences Not Showing) v1.4.2 12/06/2015 Added French translations #8 (Thanks to @MATsxm ) v1.4.1 11/18/2015 Page specific options now respect the default configurations set in the admin panel v1.4.0 11/17/2015 Added External Links options to page options tab Improved isExternalUrl function to allow custom schemes and whether to evaluate links beginning with .www or not Added more blueprint options Improved code Updated docs Fixed #7 (Possible issue with malformed URLs) Fixes external_links filter function v1.3.1 09/09/2015 Added blueprints for Grav Admin plugin Fixed #5 (Works on first page displayed) Fixed #6 (Validation failed: title is not defined in blueprints) v1.3.0 08/08/2015 Added admin configurations (requires Grav 0.9.34+) Added multi-language support (requires Grav 0.9.33+) Added default title message for external links Switched to onBuildPagesInitialized event (requires Grav 0.9.29+) Updated README.md Fixed #4 (Problem with non UTF-8 characters) v1.2.2 05/10/2015 PSR fixes v1.2.1 03/24/2015 Fixed active mode condition v1.2.0 02/21/2015 Added option mode to parse links passively (where no CSS classes are set) and actively Allow multiple classes to exclude in option exclude.classes Improved process engine to ensure not to alter HTML tags or HTML entities in content Refactored code v1.1.3 02/10/2015 Fixed self-closing tags in HTML5 and ensured to return contents compliant to HTML(5) v1.1.2 02/10/2015 By default External Links now uses the class external-links for CSS styling; using external is still possible e.g. for manually markup external links Improved usage example in README.md Fixed #1 (Issue with LightSlider plugin) v1.1.1 02/06/2015 Added usage example in README.md Add icons next to external links via CSS when using class external only Added support for HHVM (requires Grav 0.9.17+) Added modular pages support Fixed regular expression in isExternalUrl($url) method v1.1.0 02/05/2015","title":"Add-ons"},{"location":"add-ons/#v161","text":"","title":"v1.6.1"},{"location":"add-ons/#07122018","text":"Fixed parsing tags other than links #24 (Fix loading of a href element)","title":"07/12/2018"},{"location":"add-ons/#v160","text":"","title":"v1.6.0"},{"location":"add-ons/#02222018","text":"Check for page redirects #22 (Check for redirecting pages if links.redirects is enabled, thanks to @karfau ) Set rel=\"noopener noreferrer\" to all external links #21 Updated French translation strings #19 Improved README.md and YAML files","title":"02/22/2018"},{"location":"add-ons/#v153","text":"","title":"v1.5.3"},{"location":"add-ons/#02182017","text":"Fixed Russian translation strings #17 (Thanks to @geschke for the fast PR)","title":"02/18/2017"},{"location":"add-ons/#v152","text":"","title":"v1.5.2"},{"location":"add-ons/#02172017","text":"Added Russian translations #16 (Thanks to @ktaranov )","title":"02/17/2017"},{"location":"add-ons/#v151","text":"","title":"v1.5.1"},{"location":"add-ons/#02102017","text":"Fixed error in getting the remote image size","title":"02/10/2017"},{"location":"add-ons/#v150","text":"","title":"v1.5.0"},{"location":"add-ons/#02092017","text":"Use tabs in admin panel settings for better user experience Use toggle buttons for page settings","title":"02/09/2017"},{"location":"add-ons/#v144","text":"","title":"v1.4.4"},{"location":"add-ons/#01112017","text":"Fixed CURLOPT_AUTOREFERER constant","title":"01/11/2017"},{"location":"add-ons/#v143","text":"","title":"v1.4.3"},{"location":"add-ons/#10312016","text":"Fixed #11 (Not working with cache enabling) (see PR #15 ) Fixed #13 (Preferences Not Showing)","title":"10/31/2016"},{"location":"add-ons/#v142","text":"","title":"v1.4.2"},{"location":"add-ons/#12062015","text":"Added French translations #8 (Thanks to @MATsxm )","title":"12/06/2015"},{"location":"add-ons/#v141","text":"","title":"v1.4.1"},{"location":"add-ons/#11182015","text":"Page specific options now respect the default configurations set in the admin panel","title":"11/18/2015"},{"location":"add-ons/#v140","text":"","title":"v1.4.0"},{"location":"add-ons/#11172015","text":"Added External Links options to page options tab Improved isExternalUrl function to allow custom schemes and whether to evaluate links beginning with .www or not Added more blueprint options Improved code Updated docs Fixed #7 (Possible issue with malformed URLs) Fixes external_links filter function","title":"11/17/2015"},{"location":"add-ons/#v131","text":"","title":"v1.3.1"},{"location":"add-ons/#09092015","text":"Added blueprints for Grav Admin plugin Fixed #5 (Works on first page displayed) Fixed #6 (Validation failed: title is not defined in blueprints)","title":"09/09/2015"},{"location":"add-ons/#v130","text":"","title":"v1.3.0"},{"location":"add-ons/#08082015","text":"Added admin configurations (requires Grav 0.9.34+) Added multi-language support (requires Grav 0.9.33+) Added default title message for external links Switched to onBuildPagesInitialized event (requires Grav 0.9.29+) Updated README.md Fixed #4 (Problem with non UTF-8 characters)","title":"08/08/2015"},{"location":"add-ons/#v122","text":"","title":"v1.2.2"},{"location":"add-ons/#05102015","text":"PSR fixes","title":"05/10/2015"},{"location":"add-ons/#v121","text":"","title":"v1.2.1"},{"location":"add-ons/#03242015","text":"Fixed active mode condition","title":"03/24/2015"},{"location":"add-ons/#v120","text":"","title":"v1.2.0"},{"location":"add-ons/#02212015","text":"Added option mode to parse links passively (where no CSS classes are set) and actively Allow multiple classes to exclude in option exclude.classes Improved process engine to ensure not to alter HTML tags or HTML entities in content Refactored code","title":"02/21/2015"},{"location":"add-ons/#v113","text":"","title":"v1.1.3"},{"location":"add-ons/#02102015","text":"Fixed self-closing tags in HTML5 and ensured to return contents compliant to HTML(5)","title":"02/10/2015"},{"location":"add-ons/#v112","text":"","title":"v1.1.2"},{"location":"add-ons/#02102015_1","text":"By default External Links now uses the class external-links for CSS styling; using external is still possible e.g. for manually markup external links Improved usage example in README.md Fixed #1 (Issue with LightSlider plugin)","title":"02/10/2015"},{"location":"add-ons/#v111","text":"","title":"v1.1.1"},{"location":"add-ons/#02062015","text":"Added usage example in README.md Add icons next to external links via CSS when using class external only Added support for HHVM (requires Grav 0.9.17+) Added modular pages support Fixed regular expression in isExternalUrl($url) method","title":"02/06/2015"},{"location":"add-ons/#v110","text":"","title":"v1.1.0"},{"location":"add-ons/#02052015","text":"","title":"02/05/2015"},{"location":"blockchain/","text":"Lorem markdownum vides aram est sui istis excipis Danai elusaque manu fores. Illa hunc primo pinum pertulit conplevit portusque pace tacuit sincera. Iam tamen licentia exsulta patruelibus quam, deorum capit; vultu. Est Philomela qua sanguine fremit rigidos teneri cacumina anguis hospitio incidere sceptroque telum spectatorem at aequor. if (cssDawP >= station) { dllCdmaCpc += 919754; } else { superscalar += -3 + phishing; } pup_ram_bloatware(2 * network(linkedin)); var vfatWhite = serpXmp + paperPitchPermalink(enterprise_and) - 5; systemBandwidthAtm = 9 + station; rw_menu_enterprise *= on_midi / interpreter.adPpp( correctionIntegratedBalancing, bar, real) - user_remote_zebibyte( desktop(lun_flops_wamp, technology_peripheral_dv, spriteHit)); Prochytenque ergo ait aequoreo causa ardere, ex vinaque est, accingere, abest nunc sanguine. Est forma admissum adspexit pharetraque regat prece fremit clamat memorantur evanuit foret ferinas, senserat infringat illa incumbere excipit ulnas. Est undis soror animi diem continuo videres fratres ? Meo iam mihi miserum fateor, in votum iuvenis, aures? Qui labor nulla telluris valerem erat hoc, sedula. if (bus_overclocking_server > 891985) { compression = textWep - gatePlatform; } else { fileTweak += file + so_mouse_sram; pda_radcab_eup = tcp_opengl_refresh(network_phishing - realityDel, 5, 5); bounce_monitor_dns = 4; } fddi_virtualization_file *= drag_infringement(minicomputerServlet + -1 + gif_white(utf, blog, cloud), dvdMacintosh - radcab_horizontal + cpu_recycle_quicktime(ascii)); ad += tableCapsTime - 5 + keyboard_card - -2 + cc; if (raw_bloatware_compression < script_expression) { fiBps(printer_php); ipx = biometricsFullDvi(bootComponentAnsi, 929326, 38); } Dent et ignavus constant tamque Harenosi praenovimus illa homines, sumit levem et Minyeias genu finita ne quae capi vidisse concipit. Fera carmine sinistro in licet? Quoque nam an pereat pro; seu male mens favorem, illa! Longo tuas: una medioque caespite nomen. Et amor artes Est tempore nupta generumque olivae stabat. Fuit vasto sit, rite bellatricemque misceri . Amore tauri qua laborum Iovique est terra sic et aut eminus pretiosior conveniant possit . Tyranni procos. Ipsa dracones carinam, ultima, pelagi Boreae quodque, teli dictu volucres: quaeratur ostendit debere validisne? Abdita cingere dixit amat pinguis vultus securim, venter in cognoscere prima da ? Cavis in pro suspicere multis, moto neve vibrataque nitidum cessit dignabitur pater similis exercet Procne, Anius, nec? Risit luserat meumque; ubi et chlamydem inque: id mihi. Populi et emicat et pectora concussit precibus qui et Hector flammis. Pergama tenebrisque certe arbiter superfusis genetrix fama; cornu conlato foedere adspexisse rivos quoque nec profugos nunc, meritisne carbasa .","title":"Blockchain"},{"location":"blockchain/#dent-et-ignavus-constant-tamque","text":"Harenosi praenovimus illa homines, sumit levem et Minyeias genu finita ne quae capi vidisse concipit. Fera carmine sinistro in licet? Quoque nam an pereat pro; seu male mens favorem, illa! Longo tuas: una medioque caespite nomen. Et amor artes Est tempore nupta generumque olivae stabat. Fuit vasto sit, rite bellatricemque misceri . Amore tauri qua laborum Iovique est terra sic et aut eminus pretiosior conveniant possit . Tyranni procos. Ipsa dracones carinam, ultima, pelagi Boreae quodque, teli dictu volucres: quaeratur ostendit debere validisne? Abdita cingere dixit amat pinguis vultus securim, venter in cognoscere prima da ? Cavis in pro suspicere multis, moto neve vibrataque nitidum cessit dignabitur pater similis exercet Procne, Anius, nec? Risit luserat meumque; ubi et chlamydem inque: id mihi. Populi et emicat et pectora concussit precibus qui et Hector flammis. Pergama tenebrisque certe arbiter superfusis genetrix fama; cornu conlato foedere adspexisse rivos quoque nec profugos nunc, meritisne carbasa .","title":"Dent et ignavus constant tamque"},{"location":"menus-and-forms/","text":"Menus and Forms Think of a micro app menu as a kind of multiple choice survey that uses A-Z as options. Let's start with a copy of the standard todo app. Use a basic code editor like Sublime Text or Visual Studio Code . If you don't have one click on the links. Download it here","title":"Menus and Forms"},{"location":"menus-and-forms/#menus-and-forms","text":"Think of a micro app menu as a kind of multiple choice survey that uses A-Z as options. Let's start with a copy of the standard todo app. Use a basic code editor like Sublime Text or Visual Studio Code . If you don't have one click on the links. Download it here","title":"Menus and Forms"},{"location":"text-audio-video/","text":"Text Audio and Video What is it? ArgDoc is a documentation generator (of the (hopefully) aesthetic variety) for command line programs. Features Generate documentation in Markdown or HTML . Has detailed, ready-made instructions non-techie end-users. (enable with the noob flag). ArgDoc came to be when I started freelancing building one-off scripts for clients. The documentation needed to be gentle, friendly, non-ugly, and above all else non-techie freindly. So, with those needs in mind, I added an option for including detailed instructions on the basic \"how to\" of command line programs. It answers questions such as \"what is a flag,\" and \"How do I run this.\" Basic stuff to get someone unfamiliar with the command line up and running. Requirements argparse ArgDoc works by parsing the Python AST and pulling out references to argparse.ArgumentParser , so the older optparse module will not work (though support could be wrangled in if anyone needs it). Usage ArgDoc comes in three flavors; all of them named generate_doc @generate_doc ( decorator ) generate_doc() ( function ) generate_doc ( commandline ) @generate_doc Suggested method. Simply decorate your main function with @generate_doc and everytime you run your program up-to-date documentation will be generated. To run with default settings: @generate_doc def main(): parser = argparse.ArgumentParser(bla bla bla) # rest of code.. or with settings of your choice. @generate_doc(format='pdf', noob=True) def main(): parser = argparse.ArgumentParser(bla bla bla) # rest of code.. generate_doc() Alternatively, you can pass your ArgumentParser object to the generate_doc function directly. from argdoc import generate_doc def main(): parser = argparse.ArgumentParser(whatevs) parser.add_argument() ... generate_doc(parser) generate_doc (commandline) Finally, if preferred, you can run argDoc as a commandline tool. $user python argdoc.py --f pdf name_of_script_to_document.py Contact Feature request? Bug? Hate it? Drop me a line at audionautic@gmail.com Sample Output Below is a sample output for a HTML/CSS validator tool. It has the noob instructions enabled so you can get a feel for what the whole document looks like. QuickValidate.py Validates all HTML/CSS in projects folder(s) How To Use Command line programs have three main parts: Program Name Flags (optional) Arguments Program Name Simply the name of the program you want to run. $ python test_input.py Flags Flags are completely optional. They can be used to modify the way the program is run. For instance, to change where an output file is saved. They are preceded by two dashes and the name of the flag. --outfile myfilename.txt Flags can also be set via a shortened form which consists of a single dash, and (commonly) the first letter of the flag name. -o myfilename.txt Arguments If required by the program, arguments are used to give information that the program needs to do its work. For instance, in a calculator application, Arguments would be the numbers and operators that you give to the program to calculate $ calc.exe 5 + 2 Example Using all of the above info, here is an example of running a command line program with both flags and arguments. $ python calc.py --saveresults myfile.txt 38 / 2 Documentation Option String Required Choices Default Option Summary ['-h', '--help'] False None ==SUPPRESS== show this help message and exit ['-v', '--ver'] False None None Set Doctype version to validate against ['-a', '--auto'] True None None Attempt to automatically detect Doctype ['-o', '--out'] False None None Save output to text file ['-c', '--css'] False None True Set check CSS to False ['-m', '--html'] False None True Set check HTML to False ['-r', '--rec'] True None None Recursively walk through all folders in the project directory ['-g', '--verbose'] True None False Toggle verbose output on ['-l', '--highlight'] False None None Highlight reported errors in HTML files [] True None None Filename(s) to validate","title":"Text Audio and Video"},{"location":"text-audio-video/#text-audio-and-video","text":"","title":"Text Audio and Video"},{"location":"text-audio-video/#what-is-it","text":"ArgDoc is a documentation generator (of the (hopefully) aesthetic variety) for command line programs.","title":"What is it?"},{"location":"text-audio-video/#features","text":"Generate documentation in Markdown or HTML . Has detailed, ready-made instructions non-techie end-users. (enable with the noob flag). ArgDoc came to be when I started freelancing building one-off scripts for clients. The documentation needed to be gentle, friendly, non-ugly, and above all else non-techie freindly. So, with those needs in mind, I added an option for including detailed instructions on the basic \"how to\" of command line programs. It answers questions such as \"what is a flag,\" and \"How do I run this.\" Basic stuff to get someone unfamiliar with the command line up and running.","title":"Features"},{"location":"text-audio-video/#requirements","text":"argparse ArgDoc works by parsing the Python AST and pulling out references to argparse.ArgumentParser , so the older optparse module will not work (though support could be wrangled in if anyone needs it).","title":"Requirements"},{"location":"text-audio-video/#usage","text":"ArgDoc comes in three flavors; all of them named generate_doc @generate_doc ( decorator ) generate_doc() ( function ) generate_doc ( commandline )","title":"Usage"},{"location":"text-audio-video/#generate_doc","text":"Suggested method. Simply decorate your main function with @generate_doc and everytime you run your program up-to-date documentation will be generated. To run with default settings: @generate_doc def main(): parser = argparse.ArgumentParser(bla bla bla) # rest of code.. or with settings of your choice. @generate_doc(format='pdf', noob=True) def main(): parser = argparse.ArgumentParser(bla bla bla) # rest of code..","title":"@generate_doc"},{"location":"text-audio-video/#generate_doc_1","text":"Alternatively, you can pass your ArgumentParser object to the generate_doc function directly. from argdoc import generate_doc def main(): parser = argparse.ArgumentParser(whatevs) parser.add_argument() ... generate_doc(parser)","title":"generate_doc()"},{"location":"text-audio-video/#generate_doc-commandline","text":"Finally, if preferred, you can run argDoc as a commandline tool. $user python argdoc.py --f pdf name_of_script_to_document.py","title":"generate_doc (commandline)"},{"location":"text-audio-video/#contact","text":"Feature request? Bug? Hate it? Drop me a line at audionautic@gmail.com","title":"Contact"},{"location":"text-audio-video/#sample-output","text":"Below is a sample output for a HTML/CSS validator tool. It has the noob instructions enabled so you can get a feel for what the whole document looks like.","title":"Sample Output"},{"location":"text-audio-video/#quickvalidatepy","text":"Validates all HTML/CSS in projects folder(s)","title":"QuickValidate.py"},{"location":"text-audio-video/#how-to-use","text":"Command line programs have three main parts: Program Name Flags (optional) Arguments Program Name Simply the name of the program you want to run. $ python test_input.py Flags Flags are completely optional. They can be used to modify the way the program is run. For instance, to change where an output file is saved. They are preceded by two dashes and the name of the flag. --outfile myfilename.txt Flags can also be set via a shortened form which consists of a single dash, and (commonly) the first letter of the flag name. -o myfilename.txt Arguments If required by the program, arguments are used to give information that the program needs to do its work. For instance, in a calculator application, Arguments would be the numbers and operators that you give to the program to calculate $ calc.exe 5 + 2 Example Using all of the above info, here is an example of running a command line program with both flags and arguments. $ python calc.py --saveresults myfile.txt 38 / 2","title":"How To Use"},{"location":"text-audio-video/#documentation","text":"Option String Required Choices Default Option Summary ['-h', '--help'] False None ==SUPPRESS== show this help message and exit ['-v', '--ver'] False None None Set Doctype version to validate against ['-a', '--auto'] True None None Attempt to automatically detect Doctype ['-o', '--out'] False None None Save output to text file ['-c', '--css'] False None True Set check CSS to False ['-m', '--html'] False None True Set check HTML to False ['-r', '--rec'] True None None Recursively walk through all folders in the project directory ['-g', '--verbose'] True None False Toggle verbose output on ['-l', '--highlight'] False None None Highlight reported errors in HTML files [] True None None Filename(s) to validate","title":"Documentation"},{"location":"started/getting-started/","text":"What you need to do to create a ONEm micro-app Sign up using Google or Facebook Get a free API Key Create your fist app 1. Sign-up Use either a Google or Facebook account. If you do not have a Google or facebook use these links to get a free one. After you sign in you will be asked the following: Create you ONEm name Your ONEm name is your identity on the ONEm platform. It is used for direct messaging (like an email) @john Hi how are you? 2. Create your first app Sign-up Use either a Google or Facebook account. If you do not have one they are easy to create. Sign-up Use either a Google or Facebook account. If you do not have one they are easy to create.","title":"Getting Started"},{"location":"started/getting-started/#what-you-need-to-do-to-create-a-onem-micro-app","text":"Sign up using Google or Facebook Get a free API Key Create your fist app","title":"What you need to do to create a ONEm micro-app"},{"location":"started/getting-started/#1-sign-up","text":"Use either a Google or Facebook account. If you do not have a Google or facebook use these links to get a free one. After you sign in you will be asked the following:","title":"1. Sign-up"},{"location":"started/getting-started/#create-you-onem-name","text":"Your ONEm name is your identity on the ONEm platform. It is used for direct messaging (like an email) @john Hi how are you?","title":"Create you ONEm name"},{"location":"started/getting-started/#2-create-your-first-app","text":"","title":"2. Create your first app"},{"location":"started/getting-started/#sign-up","text":"Use either a Google or Facebook account. If you do not have one they are easy to create.","title":"Sign-up"},{"location":"started/getting-started/#sign-up_1","text":"Use either a Google or Facebook account. If you do not have one they are easy to create.","title":"Sign-up"}]}