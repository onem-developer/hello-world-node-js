openapi: 3.0.0
info:
  title: ONEm HTTP REST Specification API
  description: This specification defines the HTTP REST interface that is used when applications receive callbacks to the URL specified in the service registration.
  version: "1.1-oas3"
  contact:
    name: ONEm
    email: developer@onem.com
servers:
  - url: http://developer-onem.com
    description: Main (production) server
  - url: http://testtool.skor.games:9000
    description: Staging server
paths:
  /service:
    post:
      summary: Register or re-register a service
      requestBody:
        description: Provide the apikey given to you by your ONEm contact.  callbackPath is the base path of your host server where you want to receive callbacks arising from user inputs
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                apiKey: 
                  type: string
                  example: gklgjiljwejfjoweWEWEOGJWEGW
                serviceName:
                  type: string
                  example: todo
                callbackPath:
                  type: string
                  example: http://myappsite.com
                verbs:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        example: menu
                      route:
                        type: string
                        example: /todo
                      footer:
                        type: boolean
                        default: false
                        description: indicates whether this verb should appear in footers
                    required:
                      - name
                      - route
      responses:
        '200':
          description: Added or updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result: 
                    type: boolean
                    description: Indicates success or failure
      callbacks:
        userAction:
          {$request.body#/callbackPath}:
            get:
              security:
                - bearerAuth: []
              parameters:
                - in: query
                  name: param1
                  schema:
                    type: string
                  description: The first optional space-separated parameter provided by the user in service switching events
                - in: query
                  name: param2
                  schema:
                    type: string
                  description: The second optional space-separated parameter provided by the user in service switching events
                - in: query
                  name: paramn
                  schema:
                    type: string
                  description: The nth optional space-separated parameter provided by the user in service switching events
              responses:
                '200':
                  description: JSON formatted object containing the response object that should be sent to the user (menu or form)
                  content:
                    application/json:
                      schema:
                        type: object
                        required:
                          - type
                          - body
                        properties:
                          type:
                            type: string
                            description: Indicates whether to render a menu or a form
                            enum:
                              - menu
                              - form
                          header:
                            type: string
                            description: The value of the header which will be prefixed automatically with and convered to upper case
                          footer:
                            type: string
                            description: The value of the footer if required if omitted the platform will include a default footer'
                          body:
                            description: Array of either content or menu objects
                            oneOf:
                              - $ref: '#/components/schemas/Menu'
                              - $ref: '#/components/schemas/Form'
            post:
              security:
                - bearerAuth: []
              requestBody:
                description: When user completes a form, the body contains a json object with names properties and values.  The property names are taken from the 'name' property of the Form schema 
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        {$request.body#/formItems/0/name}: 
                          type: string
                          example: dueDate
              responses:
                '200':
                  description: JSON formatted object containing the response object that should be sent to the user (menu or form)
                  content:
                    application/json:
                      schema:
                        type: object
                        required:
                          - type
                          - body
                        properties:
                          type:
                            type: string
                            description: Indicates whether to render a menu or a form
                            enum:
                              - menu
                              - form
                          header:
                            type: string
                            description: The value of the header which will be prefixed automatically with and convered to upper case
                          footer:
                            type: string
                            description: The value of the footer if required. If omitted the platform will include a default footer
                          body:
                            description: Array of either content or menu objects
                            oneOf:
                              - $ref: '#/components/schemas/Menu'
                              - $ref: '#/components/schemas/Form'
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
  schemas:
    Menu:
      type: array
      items:
        oneOf:
          - type: object
            description: Content only
            required:
              - type
              - description
            properties:
              type:
                type: string
                enum:
                  - content
              description:
                type: string
                description: Value to be rendered
          - type: object
            description: Menu option
            required:
              - type
              - description
              - nextRoute
            properties:
              type:
                type: string
                enum:
                  - option
              description:
                type: string
                description: Value to be rendered
              nextRoute:
                type: string
                description: relative URL from base path to use as callback when user chooses this option
              method:
                type: string
                description: HTTP method to use in callback
                enum:
                  - GET
                  - POST
                  - PUT
                  - DELETE
                default: GET
      example:
        type: menu
        header: TODO MENU
        body:
          - type: option
            description: New todo
            nextRoute: /todo/form/desc/
          - type: option
            description: Done(0)
            nextRoute: /todoListdone/
          - type: content
            description: 'Todo (2):'
          - type: option
            description: Desc 234
            nextRoute: /todo/view/5c9a505d37655e6c74c93f0d
          - type: option
            description: Sdfg 123
            nextRoute: /todo/view/5c9a5537ccafb76cc39b1a75
    Form:
      type: object
      required:
        - nextRoute
        - formItems
      properties:
        nextRoute:
          type: string
          description: relative URL from base path to use as callback when user selects this option
        method:
          type: string
          description: HTTP method that should be used in the callback
          enum:
            - GET
            - POST
            - PUT
            - DELETE
          default: POST
        confirm:
          type: boolean
          description: TRUE if wizard confirmation menu should be displayed at the end of the form
          default: false
        formItems:
          type: array
          description: Array of form items
          items:
            type: object
            required:
              - name
              - description
              - type
            properties:
              name:
                type: string
                description: Name of the form property
              description:
                type: string
                description: User prompt
              type:
                type: string
                enum:
                  - string
                  - integer
                  - date
                description: Used for form property validation
          example:
            type: form
            header: TODO MENU
            body:
              nextRoute: todoAddDesc
              method: POST
              formItems:
              items:
              - name: description
                description: Provide a description for the task
                type: string
              - name: dueDate
                description: Provide a due date
                type: date